package vulkan.misc

import org.lwjgl.vulkan.EXTDebugReport.VK_ERROR_VALIDATION_FAILED_EXT
import org.lwjgl.vulkan.EXTDescriptorIndexing.VK_ERROR_FRAGMENTATION_EXT
import org.lwjgl.vulkan.EXTGlobalPriority.VK_ERROR_NOT_PERMITTED_EXT
import org.lwjgl.vulkan.EXTImageDrmFormatModifier.VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT
import org.lwjgl.vulkan.KHRDisplaySwapchain.VK_ERROR_INCOMPATIBLE_DISPLAY_KHR
import org.lwjgl.vulkan.KHRSurface.VK_ERROR_NATIVE_WINDOW_IN_USE_KHR
import org.lwjgl.vulkan.KHRSurface.VK_ERROR_SURFACE_LOST_KHR
import org.lwjgl.vulkan.KHRSwapchain.VK_ERROR_OUT_OF_DATE_KHR
import org.lwjgl.vulkan.KHRSwapchain.VK_SUBOPTIMAL_KHR
import org.lwjgl.vulkan.NVGLSLShader.VK_ERROR_INVALID_SHADER_NV
import org.lwjgl.vulkan.VK10.*
import org.lwjgl.vulkan.VK11.VK_ERROR_INVALID_EXTERNAL_HANDLE
import org.lwjgl.vulkan.VK11.VK_ERROR_OUT_OF_POOL_MEMORY

fun Int.check():Int {
    if(this!= VK_SUCCESS) {
        throw AssertionError("Vulkan API call failed: ${translateErrorCode(this)}")
    }
    return this
}

fun versionToString(v: Int): String {
    return "%s.%s.%s".format(
        VK_VERSION_MAJOR(v),
        VK_VERSION_MINOR(v),
        VK_VERSION_PATCH(v)
    )
}

fun translateErrorCode(code:Int):String {
    return when(code) {
        VK_SUCCESS -> "VK_SUCCESS"
        VK_NOT_READY -> "VK_NOT_READY"
        VK_TIMEOUT -> "VK_TIMEOUT"
        VK_EVENT_SET -> "VK_EVENT_SET"
        VK_EVENT_RESET -> "VK_EVENT_RESET"
        VK_INCOMPLETE -> "VK_INCOMPLETE"

        VK_ERROR_OUT_OF_HOST_MEMORY -> "VK_ERROR_OUT_OF_HOST_MEMORY"
        VK_ERROR_OUT_OF_DEVICE_MEMORY -> "VK_ERROR_OUT_OF_DEVICE_MEMORY"
        VK_ERROR_INITIALIZATION_FAILED -> "VK_ERROR_INITIALIZATION_FAILED"
        VK_ERROR_DEVICE_LOST -> "VK_ERROR_DEVICE_LOST"
        VK_ERROR_MEMORY_MAP_FAILED -> "VK_ERROR_MEMORY_MAP_FAILED"
        VK_ERROR_LAYER_NOT_PRESENT -> "VK_ERROR_LAYER_NOT_PRESENT"
        VK_ERROR_EXTENSION_NOT_PRESENT -> "VK_ERROR_EXTENSION_NOT_PRESENT"
        VK_ERROR_FEATURE_NOT_PRESENT -> "VK_ERROR_FEATURE_NOT_PRESENT"
        VK_ERROR_INCOMPATIBLE_DRIVER -> "VK_ERROR_INCOMPATIBLE_DRIVER"
        VK_ERROR_TOO_MANY_OBJECTS -> "VK_ERROR_TOO_MANY_OBJECTS"
        VK_ERROR_FORMAT_NOT_SUPPORTED -> "VK_ERROR_FORMAT_NOT_SUPPORTED"
        VK_ERROR_FRAGMENTED_POOL -> "VK_ERROR_FRAGMENTED_POOL"


        VK_ERROR_OUT_OF_POOL_MEMORY -> "VK_ERROR_OUT_OF_POOL_MEMORY"
        VK_ERROR_INVALID_EXTERNAL_HANDLE -> "VK_ERROR_INVALID_EXTERNAL_HANDLE"

        VK_ERROR_SURFACE_LOST_KHR -> "VK_ERROR_SURFACE_LOST_KHR"
        VK_ERROR_NATIVE_WINDOW_IN_USE_KHR -> "VK_ERROR_NATIVE_WINDOW_IN_USE_KHR"

        VK_SUBOPTIMAL_KHR -> "VK_SUBOPTIMAL_KHR"
        VK_ERROR_OUT_OF_DATE_KHR -> "VK_ERROR_OUT_OF_DATE_KHR"

        VK_ERROR_INCOMPATIBLE_DISPLAY_KHR -> "VK_ERROR_INCOMPATIBLE_DISPLAY_KHR"

        VK_ERROR_VALIDATION_FAILED_EXT -> "VK_ERROR_VALIDATION_FAILED_EXT"

        VK_ERROR_INVALID_SHADER_NV -> "VK_ERROR_INVALID_SHADER_NV"

        VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT -> "VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT"

        VK_ERROR_FRAGMENTATION_EXT -> "VK_ERROR_FRAGMENTATION_EXT"
        VK_ERROR_NOT_PERMITTED_EXT -> "VK_ERROR_NOT_PERMITTED_EXT"

        //VK_ERROR_INVALID_DEVICE_ADDRESS_EXT -> "VK_ERROR_INVALID_DEVICE_ADDRESS_EXT"



        else -> "UNKNOWN: $code"
    }
}